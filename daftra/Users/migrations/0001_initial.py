# Generated by Django 3.2.8 on 2021-12-18 16:18

import Users.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('Purchases', '0001_initial'),
        ('Sales', '0001_initial'),
        ('Store', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Customers',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('currency', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='deletedActivities',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('payment', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('product', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('amount', models.PositiveIntegerField(blank=True, null=True)),
                ('payment_method', models.CharField(blank=True, choices=[('cash', 'cash'), ('cheque', 'cheque'), ('bank transfer', 'bank transfer'), ('paytabs', 'paytabs')], max_length=15, null=True)),
                ('status', models.CharField(blank=True, choices=[('incomplete', 'incomplete'), ('complete', 'complete'), ('pending', 'pending'), ('failed', 'failed')], max_length=20, null=True)),
                ('item_count', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('store_count', models.PositiveSmallIntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Employees',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='employee/%y/%m')),
            ],
        ),
        migrations.CreateModel(
            name='Notes',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('date', models.DateTimeField()),
                ('notes', models.TextField()),
                ('type', models.CharField(choices=[('customer', 'customer'), ('employee', 'employee')], max_length=20)),
                ('person_id', models.IntegerField()),
                ('attachment', models.FileField(blank=True, null=True, upload_to='Notes/%y/%m')),
            ],
        ),
        migrations.CreateModel(
            name='RolePermissions',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('role', models.CharField(max_length=10)),
                ('can_add_product', models.BooleanField(default=False)),
                ('can_show_products', models.BooleanField(default=False)),
                ('can_edit_Or_delete_products', models.BooleanField(default=False)),
                ('can_add_saleBill', models.BooleanField(default=False)),
                ('can_show_saleBills', models.BooleanField(default=False)),
                ('can_show_his_saleBills', models.BooleanField(default=False)),
                ('can_edit_Or_delete_saleBill', models.BooleanField(default=False)),
                ('can_add_paymentForBills', models.BooleanField(default=False)),
                ('can_edit_feesSettings', models.BooleanField(default=False)),
                ('can_add_customer', models.BooleanField(default=False)),
                ('can_show_customers', models.BooleanField(default=False)),
                ('can_edit_Or_delete_customers', models.BooleanField(default=False)),
                ('can_add_storePermission', models.BooleanField(default=False)),
                ('can_edit_Or_delete_storePermission', models.BooleanField(default=False)),
                ('can_show_storePermissions', models.BooleanField(default=False)),
                ('can_add_purchaseBill', models.BooleanField(default=False)),
                ('can_edit_Or_delete_purchaseBill', models.BooleanField(default=False)),
                ('can_show_purchaseBills', models.BooleanField(default=False)),
                ('can_show_his_purchaseBills', models.BooleanField(default=False)),
                ('can_add_supplier', models.BooleanField(default=False)),
                ('can_edit_Or_delete_supplier', models.BooleanField(default=False)),
                ('can_show_suppliers', models.BooleanField(default=False)),
                ('can_add_notes', models.BooleanField(default=False)),
                ('can_add_employee', models.BooleanField(default=False)),
                ('can_edit_Or_delete_employee', models.BooleanField(default=False)),
                ('can_show_employees', models.BooleanField(default=False)),
                ('can_management_roles', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Tax',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('tax_name', models.CharField(max_length=30)),
                ('tax_value', models.PositiveSmallIntegerField()),
                ('product_included', models.CharField(choices=[('inclusive', 'inclusive'), ('exclusive', 'exclusive')], max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('phone', models.CharField(blank=True, max_length=11, null=True)),
                ('telephone', models.CharField(blank=True, max_length=11, null=True)),
                ('type', models.CharField(choices=[('customer', 'customer'), ('employee', 'employee'), ('supplier', 'supplier')], default='customer', max_length=8)),
                ('middle_name', models.CharField(blank=True, max_length=15, null=True)),
                ('address', models.CharField(blank=True, max_length=50, null=True)),
                ('city', models.CharField(blank=True, max_length=15, null=True)),
                ('country', models.CharField(blank=True, max_length=15, null=True)),
                ('notes', models.CharField(blank=True, max_length=150, null=True)),
                ('email', models.EmailField(blank=True, max_length=25, unique=True)),
                ('postal_code', models.SmallIntegerField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', Users.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Suppliers',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('business_name', models.CharField(max_length=25)),
                ('Tax_id', models.CharField(blank=True, max_length=30, null=True)),
                ('commercial_record', models.CharField(blank=True, max_length=30, null=True)),
                ('user', models.OneToOneField(db_column='user', on_delete=django.db.models.deletion.CASCADE, related_name='supplier', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RecordHistory',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('type', models.CharField(choices=[('update_Store', 'update_Store'), ('update_invoice', 'update_invoice'), ('sold_product', 'sold_product'), ('create_payment', 'create_payment'), ('update_payment', 'update_payment'), ('delete_payment', 'delete_payment'), ('add_addPermission', 'add_addPermission'), ('add_outPermission', 'add_outPermission'), ('update_outPermission', 'update_outPermission'), ('update_addPermission', 'update_addPermission'), ('delete_addPermission', 'delete_addPermission'), ('delete_outPermission', 'delete_outPermission'), ('update_product_addPermission', 'update_product_addPermission'), ('update_product_outPermission', 'update_product_outPermission'), ('add_product_addPermission', 'add_product_addPermission'), ('add_product_outPermission', 'add_product_outPermission'), ('delete_product_outPermission', 'delete_product_outPermission'), ('delete_product_addPermission', 'delete_product_addPermission'), ('receive_product', 'receive_product'), ('create_purchase', 'create_purchase'), ('create_sale', 'create_sale'), ('send_email', 'send_email'), ('create_appointment', 'create_appointment'), ('update_appointment', 'update_appointment'), ('delete_appointment', 'delete_appointment'), ('show_appointment', 'show_appointment'), ('move_product', 'move_product'), ('update_product_invoice', 'update_product_invoice'), ('delete_product_invoice', 'delete_product_invoice'), ('update_product', 'update_product')], max_length=40)),
                ('activity_id', models.PositiveSmallIntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('addPermissions', models.ForeignKey(blank=True, db_column='addPermissions', null=True, on_delete=django.db.models.deletion.CASCADE, to='Store.addpermissions')),
                ('add_by', models.ForeignKey(blank=True, db_column='add_by', null=True, on_delete=django.db.models.deletion.CASCADE, to='Users.employees')),
                ('customer', models.ForeignKey(blank=True, db_column='customer', null=True, on_delete=django.db.models.deletion.CASCADE, to='Users.customers')),
                ('employee', models.ForeignKey(blank=True, db_column='employee', null=True, on_delete=models.SET(Users.models.get_deleted_employee), related_name='employee', to='Users.employees')),
                ('outPermissions', models.ForeignKey(blank=True, db_column='outPermissions', null=True, on_delete=django.db.models.deletion.CASCADE, to='Store.outpermissions')),
                ('product', models.ForeignKey(blank=True, db_column='product', null=True, on_delete=django.db.models.deletion.PROTECT, to='Store.products')),
                ('purchase', models.ForeignKey(blank=True, db_column='purchase', null=True, on_delete=django.db.models.deletion.CASCADE, to='Purchases.purchaseinvoice')),
                ('sale', models.ForeignKey(blank=True, db_column='sale', null=True, on_delete=django.db.models.deletion.CASCADE, to='Sales.saleinvoice')),
            ],
        ),
        migrations.AddField(
            model_name='employees',
            name='role',
            field=models.ForeignKey(db_column='role', on_delete=django.db.models.deletion.CASCADE, to='Users.rolepermissions'),
        ),
        migrations.AddField(
            model_name='employees',
            name='user',
            field=models.OneToOneField(db_column='user', on_delete=django.db.models.deletion.CASCADE, related_name='employee', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='emails',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('subject', models.CharField(max_length=30)),
                ('send_form', models.CharField(max_length=50)),
                ('send_to', models.CharField(max_length=50)),
                ('message', models.TextField()),
                ('attachment', models.FileField(upload_to='Files/%y/%m')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('invoice', models.ForeignKey(db_column='invoice', on_delete=django.db.models.deletion.CASCADE, to='Sales.saleinvoice')),
            ],
        ),
        migrations.AddField(
            model_name='customers',
            name='user',
            field=models.OneToOneField(db_column='user', on_delete=django.db.models.deletion.CASCADE, related_name='customer', to=settings.AUTH_USER_MODEL),
        ),
    ]
